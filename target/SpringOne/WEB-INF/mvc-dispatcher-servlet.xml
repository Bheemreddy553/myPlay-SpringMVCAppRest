<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.myshow"/>
    <context:component-scan base-package="com.reddy.my_show"/>

   <mvc:annotation-driven/>


    <mvc:resources mapping="/resources/**" location="/resources/" />
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/resources/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- Configure to plugin JSON as request and response in method handler -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>


    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean>


    <bean  class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" />
    <bean id="fileValidator" class="com.myshow.common.FileValidator" />

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
    </bean>




    <!-- Initialization for data source -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
            <list>
                <value>com.reddy.my_show.server</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="show_sql">true</prop>
            </props>
        </property>
    </bean>


    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="dataSource" ref="dataSource" />
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="personDAO" class="com.reddy.my_show.server.dao.PersonDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="personService" class="com.reddy.my_show.server.service.PersonService">
        <property name="personDAO" ref="personDAO"/>
    </bean>

    <bean id="userDetailsDAO" class="com.reddy.my_show.server.dao.UserDetailsDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="loginDAO" class="com.reddy.my_show.server.dao.LoginDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="videosDAO" class="com.reddy.my_show.server.dao.VideosDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


    <bean id="userService" class="com.reddy.my_show.server.service.UserService">
        <property name="userDetailsDAO" ref="userDetailsDAO"/>
    </bean>


    <bean id="adminService" class="com.reddy.my_show.server.service.AdminService">
        <property name="videosDAO" ref="videosDAO"/>
    </bean>

    <bean id="sessionManager" class="com.reddy.my_show.server.session.SessionManager">
        <property name="loginDAO" ref="loginDAO"/>
    </bean>

    <context:property-placeholder location="classpath:db.properites"/>

</beans>